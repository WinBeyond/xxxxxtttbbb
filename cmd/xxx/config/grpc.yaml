app: XXXX # 必填，应用名
server: xxx # 必填，服务名，在server目录中会被替换
namespace: "{{ $NAMESPACE }}" # 命名空间，可对应北极星的命名空间
port: 8080 # 必填，端口号，grpc多个service可共用一个端口
http_port: 8080 # 选填，http端口号，功能与grpc-gateway一致。如果与port端口相同，则可共用端口号。

# 调用链
tracing:
  server: "{{ .server }}" # 对应jaeger中的service名
  exporters:
    jaeger:
      url: "http://localhost:14268/api/traces" # jaeger的上报地址

# 监控
metrics:
  # 将成功数与调用总数分开统计，兼容云监控中台多个指标汇总到同一个measurement，用于计算成功率
  is_sep_succ: true
  # 调用类命名空间，兼容云监控中台多个指标汇总到同一个
  invoke_ns: "xtpl_module_call"
  # 框架指标类命名空间，兼容云监控中台多个指标汇总到同一个
  runtime_ns: "xtpl_{{ .app }}_{{ .server }}"
  metrics_names: # 对应coding监控视图的名称
    CalleeCount:   "active_request_count"
    CalleeCost:    "active_time_cost"
    CallerCount:   "passive_request_count"
    CallerCost:    "passive_time_cost"
    CalleeSuccCount: "active_success_count"
    CallerSuccCount: "passive_success_count"
  label_names: # 对应coding监控视图的维度名称
    CallerService: "AModule"
    CallerMethod:  "AInterface"
    CallerIP:    "AIp"
    CalleeService: "PModule"
    CalleeMethod:  "PInterface"
    CalleeIP:      "PIp"
    ReturnCode:    "RetCode"
    CodeType:      "Status"
  invoke_labels: # 调用视图的固定指标
    Namespace: "{{ $NAMESPACE }}"
    ARegion: "{{ $REGION }}"
    AApp: "{{ .app }}" # 使用.引用其他变量，只支持一级引用（引用的值不能是变量）
    AService: "{{ .server }}"
  runtime_labels: # 指标视图的固定指标
    namespace: "{{ $NAMESPACE }}"
    ARegion: "{{ $REGION }}"
    AApp: "{{ .app }}" # 使用.引用其他变量，只支持一级引用（引用的值不能是变量）
    AService: "{{ .server }}"
    ip: "{{ $POD_IP }}"
  exporters:
    prometheus:
      port: 9100 # prometheus绑定的端口，用于pull metrics数据
      path: "/metrics" # prometheus绑定的path，用于pull metrics数据

# 日志
logging:
  level: debug # 日志等级，有debug/info/warn/error/fatal
  enable_method: true # 打印方法名
  enable_caller: true # 打印调用的文件和行号
  fields: # 每条日志默认增加的字段
    Namespace: "{{ $NAMESPACE }}"
    App: "{{ .app }}"
    Server: "{{ .server }}"
    Region: "{{ $REGION }}"
    IP: "{{ $POD_IP }}"
  method_log: # 打印接口出入参,blacklist为空表示全集，whitelist-blacklist的差集作为判断开启依据
    enable: true # 是否开启
    req_whitelist: ["sayHello"] # 打印请求参数的接口白名单
    req_blacklist: ["method1", "method2"] # 打印请求参数的接口黑名单
    rsp_whitelist: ["sayHello"] # 打印返回参数的接口白名单
    rsp_blacklist: ["method1", "method2"] # 打印返回参数的接口黑名单

  writers: # 日志输出writer，可配置多个，支持console/file
    file: # 输出到文件
      time_unit: day # 支持按year/month/day/hour/minute滚动日志文件
      max_number: 15 # 日志保留的份数
      max_size_mb: 10000  # 日志最大数量，超过后会自动删除最老的日志文件
      log_path: "./logs/{{ .server }}/rpc.log" # 日志保存路径

# 名字服务
naming:
  resolvers:
    polaris:
      address: "" # 使用公共集群，默认留空即可
      timeout: 2000 # 连接北极星的超时时间
      sync_interval: 10000 # 日志保留路径
      enable_recover: false # 设置启用全死全活机制
      log_path: ./logs_polaris/ # 日志保留路径

# RPC客户端相关
# client:
#  timeout: 5000 # 默认超时时间
#  services: # 服务列表，做一层名字与服务地址的映射
#  - name: grpc.App.Server.Svc.Example
#    address: "127.0.0.1:8081" # 指定IP:Port方式寻址
  # - name: grpc.App.Server.Svc.Example # 如果没配置，则使用**北极星寻址**
  #   address: "polaris://{{ $NAMESPACE }}/grpc.App.Server.Svc.Example" # 北极星方式寻址

# http相关
http:
  gateway:
    path: "/" # 网关http服务的path


# 系统错误的定义，用于区分是用户还是系统原因报的错
# 使用whitelist-blacklist即差集来判断是否系统错误
sys_err: 
  whitelist: # 白名单，在列表的错误码表示系统错误，为空表示所有大于0的错误码
  - [1, 1000] # 区间[1, 1000]
  - [5000] # 错误码为5000
  blacklist: # 黑名单，在列表的错误码表示不是系统错误
  - [4000, 4999]

# 云API
cloudapi:
  code_mapping: # 错误码映射，没有映射的错误码统一为InternalError
    1000: "InvalidParameter.UserNotExists"

# 依赖的中间件等
# dependency:
#   mysql:
#     default: # 实例名，默认为default
#       max_conn: 1000 # 最大连接数
#       source: root:123@tcp(127.0.0.1:3306)/mydb # 访问地址，支持polaris/ip直连等方式
#     readonly:
#       max_conn: 1000 # 最大连接数
#       source: root:123@tcp(127.0.0.1:3306)/mydb # 访问地址，支持polaris/ip直连等方式
#   redis:
#     default:
#       address: "127.0.0.1:6379"
#       db: 0
#   kafka:
#     producer:
#       default:
#         address: "127.0.0.1:9092"
#         topic: topic1 # 主题，不支持多个主题
#     consumer:
#       default:
#         address: "127.0.0.1:9092"
#         topics: "topic1" # 主题，多个使用英文逗号分隔
#         group: group-A1 # 消费组名
#   elasticsearch:
#     default:
#       address: "xxx"